@model Waiterly.Models.Wage

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Wage</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.UserId)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.User.FullName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Dollars)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Dollars)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Hours)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Hours)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Salary)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Salary)
        </dd>
    </dl>
</div>
<div>
    <form asp-action="Payout">
        <input hidden name="unassignId" value="@Model.Id" />
        <button type="submit" class="btn btn-outline-danger btn-sm"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-users"><path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><path d="M23 21v-2a4 4 0 0 0-3-3.87"></path><path d="M16 3.13a4 4 0 0 1 0 7.75"></path></svg>                                Unassign <span class="sr-only">(current)</span></button>
    </form>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    @{
        var restaurantId = ViewContext.RouteData.Values["restaurantId"];
        <a asp-action="Index" asp-route-restaurantId="@restaurantId">Back to List</a>
    }
</div>
